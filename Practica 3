Instalamos ansible en la maquina Linux
sudo apt install ansible -y

instalamos pyhton3
sudo apt install python3-pip -y

vamos a crear un directorio en etc:
sudo mkdir /etc/ansible/
cd /etc/ansible/

ahora vamos a crear un archivo .cfg
sudo nano ansible.cfg

dentro estará vacio ponemos lo siguiente:

[defaults]
inventory = /etc/ansible/hosts
private_key_file = /home/tu usuario/.ssh/id_rsa
host_key_checking = False
ask_become_pass = True

[ssh_connection]
ssh_args = -o ForwardAgent=yes -o ControlMaster=auto -o ControlPersist=60s

guardar y salir

ahora vamos a crear el archivo hosts
sudo nano hosts

pegamos lo siguiente:

[win]
192.x.x.x ip windows
[win:vars]
ansible_user=ansible
ansible_password=alexander
ansible_port=5985
ansible_connection=winrm
ansible_winrm_transport=basic
ansible_winrm_server_cert_validation=ignore

[linux]
150.x.x.x ip de digital ocean
[linux:vars]
ansible_user=ansible
ansible_ssh_private_key_file=~/.ssh/id_rsa
ansible_become_password=alexander

[all:vars]
ansible_python_interpreter=/usr/bin/python3

guardar y salir

cd
cd .shh

ahora vamos a generar un par de llaves
ssh-keygen -t rsa -b 4098

cat id_rsa.pub

copiamos el contenido 

vamos a la maquina de digital ocean

y vamos a crear el usuario ansible
adduser ansible 

vamos a agregar ese usuario al grupo sudo:
usermod -aG sudo ansible

mkdir /home/ansible/.ssh

vamos a crear un directorio de authorized keys:
touch /home/ansible/.ssh/authorized_keys

ls -la

cd /home/ansible/.ssh

ahora entramos al archivo authorized keys para pegar la llave:
nano authorized_keys

si hay algo lo borramos y pegamos la llave

guardamos y salimos

para verificar la ip de la maquina digital ocean
ip a

ahora usamos ssh en la maquina Linux
ssh ansible@150.x.x.x.x          exit

ahora vamos a comprobar la conexión entre estas dos maquina con el siguiente comando:
ansible -i /etc/ansible/hosts linux -m ping 

vamos a windows y vamos a configuración y ponemos nuestra tarjeta de red en privada

ahora vamos a nuestro powershell
(buscalo desde el mismo buscador de Windows) y ejecútalo como administrador.

Dentro ejecutaremos lo siguiente:

Habilitar la ejecución de scripts firmados localmente:
Set-ExecutionPolicy RemoteSigned -Force

Habilitar PowerShell Remoting:
Enable-PSRemoting -Force

Configurar autenticación básica en WinRM:
Set-Item WSMan:\localhost\Service\Auth\Basic -Value $true
Set-Item WSMan:\localhost\Service\AllowUnencrypted -Value $true

Reiniciar el servicio WinRM:
Restart-Service WinRM

Instalar el módulo de Windows Update:
Install-Module -Name PSWindowsUpdate -Force
Le ponemos y o s   para confirmar dependiendo el idioma decir ¨si¨

Abrir el puerto 5985 en el firewall:
New-NetFirewallRule -Name "WinRM HTTP" -Protocol TCP -LocalPort 5985 -Action Allow

Le ponemos displayname: cualquier cosa

Crear un usuario local "ansible":
New-LocalUser -Name "ansible" -Password (ConvertTo-SecureString "tu contraseña" -AsPlainText -Force) -FullName "Ansible User" -Description "Usuario Ansible"


Agregar el usuario "ansible" al grupo de administradores:
Add-LocalGroupMember -Group "Administradores" -Member "ansible"

Configurar WinRM para escuchar en todas las interfaces:
winrm create winrm/config/Listener?Address=*+Transport=HTTP

Verificar la configuración del Listener de WinRM:
winrm enumerate winrm/config/Listener

vamos a la maquina linux

y vamos a darle ping con:
ansible -i /etc/ansible/hosts win -m win_ping
